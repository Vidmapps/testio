{"ast":null,"code":"/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\nimport { format as formatUrl } from 'url';\nimport Headers from './headers.js';\nimport Body, { clone, extractContentType, getTotalBytes } from './body.js';\nimport { isAbortSignal } from './utils/is.js';\nimport { getSearch } from './utils/get-search.js';\nconst INTERNALS = Symbol('Request internals');\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} obj\n * @return {boolean}\n */\n\nconst isRequest = object => {\n  return typeof object === 'object' && typeof object[INTERNALS] === 'object';\n};\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\n\n\nexport default class Request extends Body {\n  constructor(input, init = {}) {\n    let parsedURL; // Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\n    if (isRequest(input)) {\n      parsedURL = new URL(input.url);\n    } else {\n      parsedURL = new URL(input);\n      input = {};\n    }\n\n    let method = init.method || input.method || 'GET';\n    method = method.toUpperCase(); // eslint-disable-next-line no-eq-null, eqeqeq\n\n    if ((init.body != null || isRequest(input)) && input.body !== null && (method === 'GET' || method === 'HEAD')) {\n      throw new TypeError('Request with GET/HEAD method cannot have body');\n    }\n\n    const inputBody = init.body ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n    super(inputBody, {\n      size: init.size || input.size || 0\n    });\n    const headers = new Headers(init.headers || input.headers || {});\n\n    if (inputBody !== null && !headers.has('Content-Type')) {\n      const contentType = extractContentType(inputBody, this);\n\n      if (contentType) {\n        headers.append('Content-Type', contentType);\n      }\n    }\n\n    let signal = isRequest(input) ? input.signal : null;\n\n    if ('signal' in init) {\n      signal = init.signal;\n    } // eslint-disable-next-line no-eq-null, eqeqeq\n\n\n    if (signal != null && !isAbortSignal(signal)) {\n      throw new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n    }\n\n    this[INTERNALS] = {\n      method,\n      redirect: init.redirect || input.redirect || 'follow',\n      headers,\n      parsedURL,\n      signal\n    }; // Node-fetch-only options\n\n    this.follow = init.follow === undefined ? input.follow === undefined ? 20 : input.follow : init.follow;\n    this.compress = init.compress === undefined ? input.compress === undefined ? true : input.compress : init.compress;\n    this.counter = init.counter || input.counter || 0;\n    this.agent = init.agent || input.agent;\n    this.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n    this.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n  }\n\n  get method() {\n    return this[INTERNALS].method;\n  }\n\n  get url() {\n    return formatUrl(this[INTERNALS].parsedURL);\n  }\n\n  get headers() {\n    return this[INTERNALS].headers;\n  }\n\n  get redirect() {\n    return this[INTERNALS].redirect;\n  }\n\n  get signal() {\n    return this[INTERNALS].signal;\n  }\n  /**\n   * Clone this request\n   *\n   * @return  Request\n   */\n\n\n  clone() {\n    return new Request(this);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Request';\n  }\n\n}\nObject.defineProperties(Request.prototype, {\n  method: {\n    enumerable: true\n  },\n  url: {\n    enumerable: true\n  },\n  headers: {\n    enumerable: true\n  },\n  redirect: {\n    enumerable: true\n  },\n  clone: {\n    enumerable: true\n  },\n  signal: {\n    enumerable: true\n  }\n});\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\n\nexport const getNodeRequestOptions = request => {\n  const {\n    parsedURL\n  } = request[INTERNALS];\n  const headers = new Headers(request[INTERNALS].headers); // Fetch step 1.3\n\n  if (!headers.has('Accept')) {\n    headers.set('Accept', '*/*');\n  } // HTTP-network-or-cache fetch steps 2.4-2.7\n\n\n  let contentLengthValue = null;\n\n  if (request.body === null && /^(post|put)$/i.test(request.method)) {\n    contentLengthValue = '0';\n  }\n\n  if (request.body !== null) {\n    const totalBytes = getTotalBytes(request); // Set Content-Length if totalBytes is a number (that is not NaN)\n\n    if (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n      contentLengthValue = String(totalBytes);\n    }\n  }\n\n  if (contentLengthValue) {\n    headers.set('Content-Length', contentLengthValue);\n  } // HTTP-network-or-cache fetch step 2.11\n\n\n  if (!headers.has('User-Agent')) {\n    headers.set('User-Agent', 'node-fetch');\n  } // HTTP-network-or-cache fetch step 2.15\n\n\n  if (request.compress && !headers.has('Accept-Encoding')) {\n    headers.set('Accept-Encoding', 'gzip,deflate,br');\n  }\n\n  let {\n    agent\n  } = request;\n\n  if (typeof agent === 'function') {\n    agent = agent(parsedURL);\n  }\n\n  if (!headers.has('Connection') && !agent) {\n    headers.set('Connection', 'close');\n  } // HTTP-network fetch step 4.2\n  // chunked encoding is handled by Node.js\n\n\n  const search = getSearch(parsedURL); // Manually spread the URL object instead of spread syntax\n\n  const requestOptions = {\n    path: parsedURL.pathname + search,\n    pathname: parsedURL.pathname,\n    hostname: parsedURL.hostname,\n    protocol: parsedURL.protocol,\n    port: parsedURL.port,\n    hash: parsedURL.hash,\n    search: parsedURL.search,\n    query: parsedURL.query,\n    href: parsedURL.href,\n    method: request.method,\n    headers: headers[Symbol.for('nodejs.util.inspect.custom')](),\n    insecureHTTPParser: request.insecureHTTPParser,\n    agent\n  };\n  return requestOptions;\n};","map":{"version":3,"sources":["/Users/vidmantasburba/Desktop/FrontEnd/frontend_oxylabs/testio/node_modules/node-fetch/src/request.js"],"names":["format","formatUrl","Headers","Body","clone","extractContentType","getTotalBytes","isAbortSignal","getSearch","INTERNALS","Symbol","isRequest","object","Request","constructor","input","init","parsedURL","URL","url","method","toUpperCase","body","TypeError","inputBody","size","headers","has","contentType","append","signal","redirect","follow","undefined","compress","counter","agent","highWaterMark","insecureHTTPParser","toStringTag","Object","defineProperties","prototype","enumerable","getNodeRequestOptions","request","set","contentLengthValue","test","totalBytes","Number","isNaN","String","search","requestOptions","path","pathname","hostname","protocol","port","hash","query","href","for"],"mappings":"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","sourcesContent":["\n/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport {format as formatUrl} from 'url';\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType, getTotalBytes} from './body.js';\nimport {isAbortSignal} from './utils/is.js';\nimport {getSearch} from './utils/get-search.js';\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} obj\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nexport default class Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (((init.body != null || isRequest(input)) && input.body !== null) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\tget url() {\n\t\treturn formatUrl(this[INTERNALS].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nexport const getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate,br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Manually spread the URL object instead of spread syntax\n\tconst requestOptions = {\n\t\tpath: parsedURL.pathname + search,\n\t\tpathname: parsedURL.pathname,\n\t\thostname: parsedURL.hostname,\n\t\tprotocol: parsedURL.protocol,\n\t\tport: parsedURL.port,\n\t\thash: parsedURL.hash,\n\t\tsearch: parsedURL.search,\n\t\tquery: parsedURL.query,\n\t\thref: parsedURL.href,\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn requestOptions;\n};\n"]},"metadata":{},"sourceType":"module"}