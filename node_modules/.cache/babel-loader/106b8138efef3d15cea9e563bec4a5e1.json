{"ast":null,"code":"var _jsxFileName = \"/Users/vidmantasburba/Desktop/FrontEnd/frontend_oxylabs/testio/src/components/ServerList.js\",\n    _s = $RefreshSig$();\n\nimport Server from \"./Server\"; //import { serversData } from '../data';\n\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ServerList() {\n  _s();\n\n  const [serverList, setServerList] = useState([]);\n  useEffect(() => {\n    async function getToken() {\n      const response = await fetch(\"https://playground.oxylabs.io/api/user/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: \"oxylabs\",\n          password: \"partyanimal\"\n        })\n      });\n      const data = await response.json();\n      return data.token;\n    }\n\n    async function getServerList(token) {\n      const response = await fetch(\"https://playground.oxylabs.io/api/servers\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token\n        }\n      });\n      const data = await response.json();\n      return data;\n    }\n\n    async function run() {\n      const token = await getToken();\n      const serverLists = await getServerList(token);\n      setServerList(serverLists);\n    }\n\n    run();\n  });\n\n  function sortByName() {\n    const sorted = serverList.sort(function (a, b) {\n      if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n      if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n      return 0;\n    });\n    console.log(sorted);\n    setServerList(sorted);\n  }\n\n  function sortByDistance() {\n    const sorted = serverList.sort(function (a, b) {\n      if (a.distance < b.distance) return -1;\n      if (a.distance > b.distance) return 1;\n      return 0;\n    });\n    console.log(sorted);\n    setServerList(sorted);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ServerList\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setServerList(this.sorted),\n      children: \"Sort by Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sortByDistance,\n      children: \"Sort by Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"text-uppercase table-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Distance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: serverList.map(server => {\n          return /*#__PURE__*/_jsxDEV(Server, {\n            name: server.name,\n            distance: server.distance\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ServerList, \"xcwoQppT5UDu79YZeDw+Ubre19A=\");\n\n_c = ServerList;\nexport default ServerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServerList\");","map":{"version":3,"sources":["/Users/vidmantasburba/Desktop/FrontEnd/frontend_oxylabs/testio/src/components/ServerList.js"],"names":["Server","React","useState","useEffect","ServerList","serverList","setServerList","getToken","response","fetch","method","headers","body","JSON","stringify","username","password","data","json","token","getServerList","run","serverLists","sortByName","sorted","sort","a","b","name","toLowerCase","console","log","sortByDistance","distance","map","server","Math","random"],"mappings":"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","sourcesContent":["import Server from \"./Server\";\n//import { serversData } from '../data';\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nfunction ServerList() {\n  const [serverList, setServerList] = useState([]);\n  useEffect(() => {\n    async function getToken() {\n      const response = await fetch(\n        \"https://playground.oxylabs.io/api/user/login\",\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            username: \"oxylabs\",\n            password: \"partyanimal\",\n          }),\n        }\n      );\n\n      const data = await response.json();\n\n      return data.token;\n    }\n\n    async function getServerList(token) {\n      const response = await fetch(\n        \"https://playground.oxylabs.io/api/servers\",\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": token,\n          },\n        }\n      );\n\n      const data = await response.json();\n\n      return data;\n    }\n\n    async function run() {\n      const token = await getToken();\n      const serverLists = await getServerList(token);\n      setServerList(serverLists);\n    }\n\n    run();\n  });\n\n  function sortByName() {\n    const sorted = serverList.sort(function(a, b) {\n      if (a.name.toLowerCase() < b.name.toLowerCase()\n      ) return -1;\n      if (a.name.toLowerCase() > b.name.toLowerCase()\n      ) return 1;\n      return 0;\n    })\n    console.log(sorted)\n    setServerList(sorted);\n  }\n\n  function sortByDistance() {\n    const sorted = serverList.sort(function(a, b) {\n      if (a.distance < b.distance\n      ) return -1;\n      if (a.distance > b.distance\n      ) return 1;\n      return 0;\n    })\n    console.log(sorted)\n    setServerList(sorted);\n  }\n\n  return (\n    <div className=\"ServerList\">\n      <button onClick={() => setServerList(this.sorted)}>Sort by Name</button>\n      <button onClick={sortByDistance}>Sort by Name</button>\n      <table className=\"table table-hover\">\n        <thead>\n          <tr className=\"text-uppercase table-header\">\n            <th scope=\"col\">Server</th>\n            <th scope=\"col\">Distance</th>\n          </tr>\n        </thead>\n        <tbody>\n          {serverList.map((server) => {\n            return (\n              <Server\n                key={Math.random()}\n                name={server.name}\n                distance={server.distance}\n              ></Server>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default ServerList;\n"]},"metadata":{},"sourceType":"module"}