{"ast":null,"code":"var _jsxFileName = \"/Users/vidmantasburba/Desktop/FrontEnd/frontend_oxylabs/testio/src/components/ServerList.js\",\n    _s = $RefreshSig$();\n\nimport Server from \"./Server\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ServerList() {\n  _s();\n\n  const [serverList, setServerList] = useState([]);\n\n  async function getToken() {\n    const response = await fetch(\"https://playground.oxylabs.io/api/user/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: \"oxylabs\",\n        password: \"partyanimal\"\n      })\n    });\n    const data = await response.json();\n    return data.token;\n  }\n\n  async function getServerList(token) {\n    const response = await fetch(\"https://playground.oxylabs.io/api/servers\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": token\n      }\n    });\n    const data = await response.json();\n    return data;\n  }\n\n  async function run() {\n    const token = await getToken();\n    const serverLists = await getServerList(token);\n    localStorage.setItem(\"servers\", JSON.stringify(serverLists));\n  }\n\n  run();\n\n  const sortByName = () => {\n    const sorted = JSON.parse(localStorage.getItem(\"servers\")).sort(function (a, b) {\n      if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n      if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n      return 0;\n    });\n    setServerList(sorted);\n  };\n\n  const sortByDistance = () => {\n    const sorted = JSON.parse(localStorage.getItem(\"servers\")).sort(function (a, b) {\n      if (a.distance < b.distance) return -1;\n      if (a.distance > b.distance) return 1;\n      return 0;\n    });\n    setServerList(sorted);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sortByName,\n      children: \"Show sorted by Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sortByDistance,\n      children: \"Show sorted by Distance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"width-fill-available\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"table-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"text-align-start\",\n            children: \"Server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"text-align-end\",\n            children: \"Distance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: serverList.map(server => {\n          return /*#__PURE__*/_jsxDEV(Server, {\n            name: server.name,\n            distance: server.distance\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ServerList, \"wgDv7MKqDHHELGmzWE2LMfqvtCs=\");\n\n_c = ServerList;\nexport default ServerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServerList\");","map":{"version":3,"sources":["/Users/vidmantasburba/Desktop/FrontEnd/frontend_oxylabs/testio/src/components/ServerList.js"],"names":["Server","React","useState","ServerList","serverList","setServerList","getToken","response","fetch","method","headers","body","JSON","stringify","username","password","data","json","token","getServerList","run","serverLists","localStorage","setItem","sortByName","sorted","parse","getItem","sort","a","b","name","toLowerCase","sortByDistance","distance","map","server","Math","random"],"mappings":"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","sourcesContent":["import Server from \"./Server\";\nimport React, { useState } from \"react\";\n\nfunction ServerList() {\n  const [serverList, setServerList] = useState([]);\n\n  async function getToken() {\n    const response = await fetch(\n      \"https://playground.oxylabs.io/api/user/login\",\n      {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          username: \"oxylabs\",\n          password: \"partyanimal\",\n        }),\n      }\n    );\n\n    const data = await response.json();\n\n    return data.token;\n  }\n\n  async function getServerList(token) {\n    const response = await fetch(\n      \"https://playground.oxylabs.io/api/servers\",\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token,\n        },\n      }\n    );\n\n    const data = await response.json();\n\n    return data;\n  }\n\n  async function run() {\n    const token = await getToken();\n    const serverLists = await getServerList(token);\n    localStorage.setItem(\"servers\", JSON.stringify(serverLists));\n  }\n\n  run();\n\n\n\n  const sortByName = () => {\n    const sorted = JSON.parse(localStorage.getItem(\"servers\")).sort(function (\n      a,\n      b\n    ) {\n      if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n      if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n      return 0;\n    });\n    setServerList(sorted);\n  };\n\n  const sortByDistance = () => {\n    const sorted = JSON.parse(localStorage.getItem(\"servers\")).sort(function (\n      a,\n      b\n    ) {\n      if (a.distance < b.distance) return -1;\n      if (a.distance > b.distance) return 1;\n      return 0;\n    });\n    setServerList(sorted);\n  };\n\n  return (\n    <div>\n      <button onClick={sortByName}>Show sorted by Name</button>\n      <button onClick={sortByDistance}>Show sorted by Distance</button>\n      <table className=\"width-fill-available\">\n        <thead>\n          <tr className=\"table-header\">\n            <th scope=\"text-align-start\">Server</th>\n            <th scope=\"text-align-end\">Distance</th>\n          </tr>\n        </thead>\n        <tbody>\n          {serverList.map((server) => {\n            return (\n              <Server\n                key={Math.random()}\n                name={server.name}\n                distance={server.distance}\n              ></Server>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default ServerList;\n"]},"metadata":{},"sourceType":"module"}