{"ast":null,"code":"import { testioActions } from \"./testio-slice\";\nconst adminUser = {\n  username: \"oxylabs\",\n  password: \"partyanimal\"\n};\nexport const logIn = async details => {\n  if (details.username === adminUser.username && details.password === adminUser.password) {\n    console.log(details.name);\n    await getToken({\n      username: details.name,\n      password: details.password\n    });\n  } else {\n    alert(\"User details do not match\");\n  }\n};\n\nasync function getToken(_ref) {\n  let {\n    username,\n    password\n  } = _ref;\n  const response = await fetch(\"https://playground.oxylabs.io/api/user/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  });\n  const data = await response.json();\n  return dispatch => {\n    dispatch(testioActions.confirmLogin(data.token));\n  };\n}","map":{"version":3,"names":["testioActions","adminUser","username","password","logIn","details","console","log","name","getToken","alert","response","fetch","method","headers","body","JSON","stringify","data","json","dispatch","confirmLogin","token"],"sources":["/Users/vidmantasburba/Documents/GitHub/testio/src/store/login-actions.js"],"sourcesContent":["import { testioActions } from \"./testio-slice\";\n\nconst adminUser = {\n  username: \"oxylabs\",\n  password: \"partyanimal\",\n};\n\nexport const logIn = async (details) => {\n  if (\n    details.username === adminUser.username &&\n    details.password === adminUser.password\n  ) {\n    console.log(details.name);\n\n    await getToken({\n      username: details.name,\n      password: details.password,\n    });\n  } else {\n    alert(\"User details do not match\");\n  }\n};\n\nasync function getToken({ username, password }) {\n  const response = await fetch(\"https://playground.oxylabs.io/api/user/login\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      username: username,\n      password: password,\n    }),\n  });\n\n  const data = await response.json();\n  return (dispatch) => {\n    dispatch(testioActions.confirmLogin(data.token));\n  };\n}\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,gBAA9B;AAEA,MAAMC,SAAS,GAAG;EAChBC,QAAQ,EAAE,SADM;EAEhBC,QAAQ,EAAE;AAFM,CAAlB;AAKA,OAAO,MAAMC,KAAK,GAAG,MAAOC,OAAP,IAAmB;EACtC,IACEA,OAAO,CAACH,QAAR,KAAqBD,SAAS,CAACC,QAA/B,IACAG,OAAO,CAACF,QAAR,KAAqBF,SAAS,CAACE,QAFjC,EAGE;IACAG,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,IAApB;IAEA,MAAMC,QAAQ,CAAC;MACbP,QAAQ,EAAEG,OAAO,CAACG,IADL;MAEbL,QAAQ,EAAEE,OAAO,CAACF;IAFL,CAAD,CAAd;EAID,CAVD,MAUO;IACLO,KAAK,CAAC,2BAAD,CAAL;EACD;AACF,CAdM;;AAgBP,eAAeD,QAAf,OAAgD;EAAA,IAAxB;IAAEP,QAAF;IAAYC;EAAZ,CAAwB;EAC9C,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAAD,EAAiD;IAC3EC,MAAM,EAAE,MADmE;IAE3EC,OAAO,EAAE;MAAE,gBAAgB;IAAlB,CAFkE;IAG3EC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBf,QAAQ,EAAEA,QADS;MAEnBC,QAAQ,EAAEA;IAFS,CAAf;EAHqE,CAAjD,CAA5B;EASA,MAAMe,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;EACA,OAAQC,QAAD,IAAc;IACnBA,QAAQ,CAACpB,aAAa,CAACqB,YAAd,CAA2BH,IAAI,CAACI,KAAhC,CAAD,CAAR;EACD,CAFD;AAGD"},"metadata":{},"sourceType":"module"}