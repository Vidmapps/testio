{"ast":null,"code":"var _jsxFileName = \"/Users/vidmantasburba/Documents/GitHub/testio/src/components/ServerList/ServerList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getServerList } from \"../../store/serversList-actions\";\nimport Server from \"./Server\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initialLoad = true;\nlet serversLoad = false;\n\nconst ServerList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const servers = useSelector(state => state.testio.serversList);\n  const token = useSelector(state => state.testio.token);\n  const [serversList, setServersList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (initialLoad) {\n      dispatch(getServerList(token));\n      initialLoad = false;\n      initialLoad = true;\n    }\n\n    if (serversLoad) {\n      setServersList(servers);\n    }\n  }, [dispatch, servers, serversList, token]);\n\n  const sortByName = () => {\n    console.log(serversList);\n    const arrayForSort = [...serversList];\n    const sorted = arrayForSort.sort(function (a, b) {\n      if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n      if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n      return 0;\n    });\n    setServersList(sorted);\n  };\n\n  const sortByDistance = () => {\n    const arrayForSort = [...serversList];\n    const sorted = arrayForSort.sort(function (a, b) {\n      if (a.distance < b.distance) return -1;\n      if (a.distance > b.distance) return 1;\n      return 0;\n    });\n    setServersList(sorted);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sortByName,\n      children: \"Show sorted by Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sortByDistance,\n      children: \"Show sorted by Distance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"width-fill-available\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"table-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"text-align-start\",\n            children: \"Server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"text-align-end\",\n            children: \"Distance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: serversList.map(server => {\n          return /*#__PURE__*/_jsxDEV(Server, {\n            name: server.name,\n            distance: server.distance\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ServerList, \"UKvCmi6LgPwCD5tA4EjDwgnZrJA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ServerList;\nexport default ServerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServerList\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","getServerList","Server","initialLoad","serversLoad","ServerList","dispatch","servers","state","testio","serversList","token","setServersList","isLoading","setIsLoading","sortByName","console","log","arrayForSort","sorted","sort","a","b","name","toLowerCase","sortByDistance","distance","map","server","Math","random"],"sources":["/Users/vidmantasburba/Documents/GitHub/testio/src/components/ServerList/ServerList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getServerList } from \"../../store/serversList-actions\";\n\nimport Server from \"./Server\";\n\nlet initialLoad = true;\nlet serversLoad = false;\n\nconst ServerList = () => {\n  const dispatch = useDispatch();\n  const servers = useSelector((state) => state.testio.serversList);\n  const token = useSelector((state) => state.testio.token);\n\n  const [serversList, setServersList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (initialLoad) {\n      dispatch(getServerList(token));\n      initialLoad = false;\n      initialLoad = true;\n    }\n    if (serversLoad) {\n      setServersList(servers);\n    }\n  }, [dispatch, servers, serversList, token]);\n\n  const sortByName = () => {\n    console.log(serversList);\n    const arrayForSort = [...serversList];\n    const sorted = arrayForSort.sort(function (a, b) {\n      if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n      if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n      return 0;\n    });\n    setServersList(sorted);\n  };\n\n  const sortByDistance = () => {\n    const arrayForSort = [...serversList];\n    const sorted = arrayForSort.sort(function (a, b) {\n      if (a.distance < b.distance) return -1;\n      if (a.distance > b.distance) return 1;\n      return 0;\n    });\n    setServersList(sorted);\n  };\n\n  return (\n    <div>\n      <button onClick={sortByName}>Show sorted by Name</button>\n      <button onClick={sortByDistance}>Show sorted by Distance</button>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <table className=\"width-fill-available\">\n          <thead>\n            <tr className=\"table-header\">\n              <th scope=\"text-align-start\">Server</th>\n              <th scope=\"text-align-end\">Distance</th>\n            </tr>\n          </thead>\n          <tbody>\n            {serversList.map((server) => {\n              return (\n                <Server\n                  key={Math.random()}\n                  name={server.name}\n                  distance={server.distance}\n                ></Server>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default ServerList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}