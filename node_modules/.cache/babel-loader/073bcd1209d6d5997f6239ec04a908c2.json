{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst serversSlice = createSlice({\n  name: \"servers\",\n  initialState: {\n    serverLists: []\n  },\n  reducers: {\n    setFilmsIsLoading(state) {\n      state.filmsIsLoading = true;\n    },\n\n    setPeopleIsLoading(state) {\n      state.peopleIsLoading = true;\n    },\n\n    loadedChar(state, action) {\n      state.loadedCharName = action.payload;\n    },\n\n    showFilms(state, action) {\n      state.films = action.payload.films;\n      state.filmsIsLoading = false;\n    },\n\n    showPeople(state, action) {\n      state.people = action.payload.people;\n      state.filmSelected = action.payload.title;\n      state.peopleIsLoading = false;\n    }\n\n  }\n});\nexport const serversActions = serversSlice.actions;\nexport default serversSlice;","map":{"version":3,"names":["createSlice","serversSlice","name","initialState","serverLists","reducers","setFilmsIsLoading","state","filmsIsLoading","setPeopleIsLoading","peopleIsLoading","loadedChar","action","loadedCharName","payload","showFilms","films","showPeople","people","filmSelected","title","serversActions","actions"],"sources":["/Users/vidmantasburba/Documents/GitHub/testio/src/store/servers-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst serversSlice = createSlice({\n  name: \"servers\",\n  initialState: {\n    serverLists: [],\n  },\n  reducers: {\n    setFilmsIsLoading(state) {\n      state.filmsIsLoading = true;\n    },\n    setPeopleIsLoading(state) {\n      state.peopleIsLoading = true;\n    },\n    loadedChar(state, action) {\n      state.loadedCharName = action.payload;\n    },\n    showFilms(state, action) {\n      state.films = action.payload.films;\n      state.filmsIsLoading = false;\n    },\n    showPeople(state, action) {\n      state.people = action.payload.people;\n      state.filmSelected = action.payload.title;\n      state.peopleIsLoading = false;\n    },\n  },\n});\n\nexport const serversActions = serversSlice.actions;\n\nexport default serversSlice;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAGD,WAAW,CAAC;EAC/BE,IAAI,EAAE,SADyB;EAE/BC,YAAY,EAAE;IACZC,WAAW,EAAE;EADD,CAFiB;EAK/BC,QAAQ,EAAE;IACRC,iBAAiB,CAACC,KAAD,EAAQ;MACvBA,KAAK,CAACC,cAAN,GAAuB,IAAvB;IACD,CAHO;;IAIRC,kBAAkB,CAACF,KAAD,EAAQ;MACxBA,KAAK,CAACG,eAAN,GAAwB,IAAxB;IACD,CANO;;IAORC,UAAU,CAACJ,KAAD,EAAQK,MAAR,EAAgB;MACxBL,KAAK,CAACM,cAAN,GAAuBD,MAAM,CAACE,OAA9B;IACD,CATO;;IAURC,SAAS,CAACR,KAAD,EAAQK,MAAR,EAAgB;MACvBL,KAAK,CAACS,KAAN,GAAcJ,MAAM,CAACE,OAAP,CAAeE,KAA7B;MACAT,KAAK,CAACC,cAAN,GAAuB,KAAvB;IACD,CAbO;;IAcRS,UAAU,CAACV,KAAD,EAAQK,MAAR,EAAgB;MACxBL,KAAK,CAACW,MAAN,GAAeN,MAAM,CAACE,OAAP,CAAeI,MAA9B;MACAX,KAAK,CAACY,YAAN,GAAqBP,MAAM,CAACE,OAAP,CAAeM,KAApC;MACAb,KAAK,CAACG,eAAN,GAAwB,KAAxB;IACD;;EAlBO;AALqB,CAAD,CAAhC;AA2BA,OAAO,MAAMW,cAAc,GAAGpB,YAAY,CAACqB,OAApC;AAEP,eAAerB,YAAf"},"metadata":{},"sourceType":"module"}