{"ast":null,"code":"var _jsxFileName = \"/Users/vidmantasburba/Desktop/FrontEnd/frontend_oxylabs/testio/src/components/GetServers.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GetServers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      servers: [],\n      isLoaded: false\n    };\n  }\n\n  async componentDidMount() {\n    if (JSON.parse(localStorage.getItem(\"servers\")) !== null) {\n      console.log(JSON.parse(localStorage.getItem(\"servers\")));\n      this.setState({\n        isLoaded: true,\n        films: JSON.parse(localStorage.getItem(\"servers\"))\n      });\n    } else {\n      const url = \"https://playground.oxylabs.io/api/servers\";\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(data);\n      /* fetch()\n          .then((response) => response.json())\n          .then((json) => {\n          localStorage.setItem(\"servers\", JSON.stringify(json.results));\n          this.setState({\n              isLoaded: true,\n              servers: JSON.parse(localStorage.getItem(\"servers\")),\n          });\n          }); */\n    }\n  }\n  /*  const response = await fetch('https://homework.fdp.workers.dev/', {\n       method: 'POST',\n       body: JSON.stringify({data}),\n       headers: {\n         'Content-Type': 'application/json',\n         'X-API-KEY': 'swb-222222',\n       },\n     });\n     console.log(response.json()); */\n\n\n  render() {\n    var {\n      isLoaded,\n      servers\n    } = this.state;\n\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 display-6\",\n        children: \"Loading data from API...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"servers\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: servers.map((server, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: server.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default GetServers;","map":{"version":3,"sources":["/Users/vidmantasburba/Desktop/FrontEnd/frontend_oxylabs/testio/src/components/GetServers.js"],"names":["React","Component","GetServers","constructor","props","state","servers","isLoaded","componentDidMount","JSON","parse","localStorage","getItem","console","log","setState","films","url","response","fetch","data","json","render","map","server","index","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AACjCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,QAAIC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,MAAgD,IAApD,EAA0D;AACtDC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAZ;AACF,WAAKG,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZS,QAAAA,KAAK,EAAEP,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX;AAFK,OAAd;AAID,KAND,MAMO;AACH,YAAMK,GAAG,GAAG,2CAAZ;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK;AACF;AAEF;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEEE,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEf,MAAAA,QAAF;AAAYD,MAAAA;AAAZ,QAAwB,KAAKD,KAAjC;;AACA,QAAI,CAACE,QAAL,EAAe;AACb,0BAAO;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA,oBACGD,OAAO,CAACiB,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC9B,gCACE;AAAA,qCACE;AAAA,0BAAMD,MAAM,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA;AADF,eAAUD,KAAV;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WANA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAaD;AACF;;AA9DgC;;AAiEnC,eAAevB,UAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass GetServers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      servers: [],\n      isLoaded: false,\n    };\n  }\n\n  async componentDidMount() {\n    if (JSON.parse(localStorage.getItem(\"servers\")) !== null) {\n        console.log(JSON.parse(localStorage.getItem(\"servers\")))\n      this.setState({\n        isLoaded: true,\n        films: JSON.parse(localStorage.getItem(\"servers\")),\n      });\n    } else {\n        const url = \"https://playground.oxylabs.io/api/servers\";\n        const response = await fetch(url); \n        const data = await response.json();\n        console.log(data)\n        /* fetch()\n            .then((response) => response.json())\n            .then((json) => {\n            localStorage.setItem(\"servers\", JSON.stringify(json.results));\n            this.setState({\n                isLoaded: true,\n                servers: JSON.parse(localStorage.getItem(\"servers\")),\n            });\n            }); */\n    }\n  }\n\n /*  const response = await fetch('https://homework.fdp.workers.dev/', {\n      method: 'POST',\n      body: JSON.stringify({data}),\n      headers: {\n        'Content-Type': 'application/json',\n        'X-API-KEY': 'swb-222222',\n      },\n    });\n    console.log(response.json()); */\n\n  render() {\n    var { isLoaded, servers } = this.state;\n    if (!isLoaded) {\n      return <div className=\"p-4 display-6\">Loading data from API...</div>;\n    } else {\n      return (\n        <div className=\"servers\">\n          <div className=\"\">\n            {servers.map((server, index) => {\n              return (\n                <div key={index}>\n                  <div>{server.title}</div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default GetServers;\n"]},"metadata":{},"sourceType":"module"}