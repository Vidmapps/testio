{"ast":null,"code":"var _jsxFileName = \"/Users/vidmantasburba/Documents/GitHub/testio/src/components/ServerList/ServerList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { testioActions } from \"../../store/testio-slice\";\nimport Server from \"./Server\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ServerList = () => {\n  _s();\n\n  console.log(\"hello\"); //const testio = useSelector((state) => state.testio);\n\n  const [serverList, setServerList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false); //useEffect(() => {\n\n  /*  const checkIfStillLoading = () => {\n      localStorage.getItem(\"server\") === \"\"\n        ? alert(\"No servers are loaded, please contact support\")\n        : setIsLoading(false) && sortByDistance();\n    };\n    if (localStorage.getItem(\"servers\") === \"\") {\n      setIsLoading(true);\n      setTimeout(() => {\n        checkIfStillLoading();\n      }, 2000);\n    } else {\n      setIsLoading(false);\n      sortByDistance();\n    } */\n  //}, []);\n\n  /* const sortByName = () => {\n    const sorted = JSON.parse(localStorage.getItem(\"servers\")).sort(function (\n      a,\n      b\n    ) {\n      if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n      if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n      return 0;\n    });\n    setServerList(sorted);\n  }; */\n\n  /*  const sortByDistance = () => {\n    const sorted = JSON.parse(localStorage.getItem(\"servers\")).sort(function (\n      a,\n      b\n    ) {\n      if (a.distance < b.distance) return -1;\n      if (a.distance > b.distance) return 1;\n      return 0;\n    });\n    setServerList(sorted);\n  }; */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"width-fill-available\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"table-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"text-align-start\",\n            children: \"Server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"text-align-end\",\n            children: \"Distance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: serverList.map(server => {\n          return /*#__PURE__*/_jsxDEV(Server, {\n            name: server.name,\n            distance: server.distance\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ServerList, \"r9h44is3TbNfojj6kQetUpNB7RM=\");\n\n_c = ServerList;\nexport default ServerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServerList\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","testioActions","Server","ServerList","console","log","serverList","setServerList","isLoading","setIsLoading","map","server","name","distance","Math","random"],"sources":["/Users/vidmantasburba/Documents/GitHub/testio/src/components/ServerList/ServerList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { testioActions } from \"../../store/testio-slice\";\n\nimport Server from \"./Server\";\n\nconst ServerList = () => {\n  console.log(\"hello\");\n  //const testio = useSelector((state) => state.testio);\n\n  const [serverList, setServerList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  //useEffect(() => {\n\n  /*  const checkIfStillLoading = () => {\n      localStorage.getItem(\"server\") === \"\"\n        ? alert(\"No servers are loaded, please contact support\")\n        : setIsLoading(false) && sortByDistance();\n    };\n    if (localStorage.getItem(\"servers\") === \"\") {\n      setIsLoading(true);\n      setTimeout(() => {\n        checkIfStillLoading();\n      }, 2000);\n    } else {\n      setIsLoading(false);\n      sortByDistance();\n    } */\n  //}, []);\n\n  /* const sortByName = () => {\n    const sorted = JSON.parse(localStorage.getItem(\"servers\")).sort(function (\n      a,\n      b\n    ) {\n      if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n      if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n      return 0;\n    });\n    setServerList(sorted);\n  }; */\n\n  /*  const sortByDistance = () => {\n    const sorted = JSON.parse(localStorage.getItem(\"servers\")).sort(function (\n      a,\n      b\n    ) {\n      if (a.distance < b.distance) return -1;\n      if (a.distance > b.distance) return 1;\n      return 0;\n    });\n    setServerList(sorted);\n  }; */\n\n  return (\n    <div>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <table className=\"width-fill-available\">\n          <thead>\n            <tr className=\"table-header\">\n              <th scope=\"text-align-start\">Server</th>\n              <th scope=\"text-align-end\">Distance</th>\n            </tr>\n          </thead>\n          <tbody>\n            {serverList.map((server) => {\n              return (\n                <Server\n                  key={Math.random()}\n                  name={server.name}\n                  distance={server.distance}\n                ></Server>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default ServerList;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvBC,OAAO,CAACC,GAAR,CAAY,OAAZ,EADuB,CAEvB;;EAEA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C,CALuB,CAOvB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,oBACE;IAAA,UACGW,SAAS,gBACR;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADQ,gBAGR;MAAO,SAAS,EAAC,sBAAjB;MAAA,wBACE;QAAA,uBACE;UAAI,SAAS,EAAC,cAAd;UAAA,wBACE;YAAI,KAAK,EAAC,kBAAV;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAI,KAAK,EAAC,gBAAV;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAOE;QAAA,UACGF,UAAU,CAACI,GAAX,CAAgBC,MAAD,IAAY;UAC1B,oBACE,QAAC,MAAD;YAEE,IAAI,EAAEA,MAAM,CAACC,IAFf;YAGE,QAAQ,EAAED,MAAM,CAACE;UAHnB,GACOC,IAAI,CAACC,MAAL,EADP;YAAA;YAAA;YAAA;UAAA,QADF;QAOD,CARA;MADH;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA;EAJJ;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD,CA5ED;;GAAMZ,U;;KAAAA,U;AA8EN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}