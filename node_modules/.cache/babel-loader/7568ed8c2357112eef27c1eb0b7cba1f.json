{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst serversSlice = createSlice({\n  name: \"servers\",\n  initialState: {\n    serverLists: [],\n    token: \"\",\n    serverListIsLoading: false,\n    logingIn: false\n  },\n  reducers: {\n    logIn(state, action) {\n      state.token = action.payload;\n      state.logingIn = false;\n    },\n\n    showServerList(state, action) {\n      state.serverLists = action.payload;\n    }\n\n  }\n});\nexport const serversActions = serversSlice.actions;\nexport default serversSlice;","map":{"version":3,"names":["createSlice","serversSlice","name","initialState","serverLists","token","serverListIsLoading","logingIn","reducers","logIn","state","action","payload","showServerList","serversActions","actions"],"sources":["/Users/vidmantasburba/Documents/GitHub/testio/src/store/servers-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst serversSlice = createSlice({\n  name: \"servers\",\n  initialState: {\n    serverLists: [],\n    token: \"\",\n    serverListIsLoading: false,\n    logingIn: false,\n  },\n  reducers: {\n    logIn(state, action) {\n      state.token = action.payload;\n      state.logingIn = false;\n    },\n    showServerList(state, action) {\n      state.serverLists = action.payload;\n    },\n  },\n});\n\nexport const serversActions = serversSlice.actions;\n\nexport default serversSlice;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAGD,WAAW,CAAC;EAC/BE,IAAI,EAAE,SADyB;EAE/BC,YAAY,EAAE;IACZC,WAAW,EAAE,EADD;IAEZC,KAAK,EAAE,EAFK;IAGZC,mBAAmB,EAAE,KAHT;IAIZC,QAAQ,EAAE;EAJE,CAFiB;EAQ/BC,QAAQ,EAAE;IACRC,KAAK,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACnBD,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAArB;MACAF,KAAK,CAACH,QAAN,GAAiB,KAAjB;IACD,CAJO;;IAKRM,cAAc,CAACH,KAAD,EAAQC,MAAR,EAAgB;MAC5BD,KAAK,CAACN,WAAN,GAAoBO,MAAM,CAACC,OAA3B;IACD;;EAPO;AARqB,CAAD,CAAhC;AAmBA,OAAO,MAAME,cAAc,GAAGb,YAAY,CAACc,OAApC;AAEP,eAAed,YAAf"},"metadata":{},"sourceType":"module"}