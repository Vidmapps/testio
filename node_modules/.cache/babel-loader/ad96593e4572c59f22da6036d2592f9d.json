{"ast":null,"code":"import { useSelector } from \"react-redux\";\nimport { testioActions } from \"./testio-slice\";\nexport const logIn = details => {\n  var _s = $RefreshSig$();\n\n  return _s(async dispatch => {\n    _s();\n\n    const isLoading = useSelector(state => state.testio.serversListIsLoading);\n    dispatch(testioActions.confirmLogin(isLoading));\n    const token = await getToken({\n      username: details.username,\n      password: details.password\n    });\n    token && token !== undefined && dispatch(testioActions.confirmLogin(token));\n  }, \"d6XrFDadzEONiFFjLDEOApa00Ck=\", false, function () {\n    return [useSelector];\n  });\n};\n\nasync function getToken(_ref) {\n  let {\n    username,\n    password\n  } = _ref;\n  const response = await fetch(\"https://playground.oxylabs.io/api/user/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n\n  if (response.ok) {\n    const data = await response.json();\n    return data.token;\n  } else {\n    alert(\"Authentication failed: please check login details\");\n  }\n}","map":{"version":3,"names":["useSelector","testioActions","logIn","details","dispatch","isLoading","state","testio","serversListIsLoading","confirmLogin","token","getToken","username","password","undefined","response","fetch","method","headers","body","JSON","stringify","ok","data","json","alert"],"sources":["/Users/vidmantasburba/Documents/GitHub/testio/src/store/login-actions.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { testioActions } from \"./testio-slice\";\n\nexport const logIn = (details) => {\n  return async (dispatch) => {\n    const isLoading = useSelector((state) => state.testio.serversListIsLoading);\n\n    dispatch(testioActions.confirmLogin(isLoading));\n\n    const token = await getToken({\n      username: details.username,\n      password: details.password,\n    });\n    token && token !== undefined && dispatch(testioActions.confirmLogin(token));\n  };\n};\n\nasync function getToken({ username, password }) {\n  const response = await fetch(\"https://playground.oxylabs.io/api/user/login\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  });\n  if (response.ok) {\n    const data = await response.json();\n    return data.token;\n  } else {\n    alert(\"Authentication failed: please check login details\");\n  }\n}\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,OAAO,MAAMC,KAAK,GAAIC,OAAD,IAAa;EAAA;;EAChC,UAAO,MAAOC,QAAP,IAAoB;IAAA;;IACzB,MAAMC,SAAS,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,oBAAzB,CAA7B;IAEAJ,QAAQ,CAACH,aAAa,CAACQ,YAAd,CAA2BJ,SAA3B,CAAD,CAAR;IAEA,MAAMK,KAAK,GAAG,MAAMC,QAAQ,CAAC;MAC3BC,QAAQ,EAAET,OAAO,CAACS,QADS;MAE3BC,QAAQ,EAAEV,OAAO,CAACU;IAFS,CAAD,CAA5B;IAIAH,KAAK,IAAIA,KAAK,KAAKI,SAAnB,IAAgCV,QAAQ,CAACH,aAAa,CAACQ,YAAd,CAA2BC,KAA3B,CAAD,CAAxC;EACD,CAVD;IAAA,QACoBV,WADpB;EAAA;AAWD,CAZM;;AAcP,eAAeW,QAAf,OAAgD;EAAA,IAAxB;IAAEC,QAAF;IAAYC;EAAZ,CAAwB;EAC9C,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAAD,EAAiD;IAC3EC,MAAM,EAAE,MADmE;IAE3EC,OAAO,EAAE;MAAE,gBAAgB;IAAlB,CAFkE;IAG3EC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBT,QADmB;MAEnBC;IAFmB,CAAf;EAHqE,CAAjD,CAA5B;;EAQA,IAAIE,QAAQ,CAACO,EAAb,EAAiB;IACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAAnB;IACA,OAAOD,IAAI,CAACb,KAAZ;EACD,CAHD,MAGO;IACLe,KAAK,CAAC,mDAAD,CAAL;EACD;AACF"},"metadata":{},"sourceType":"module"}