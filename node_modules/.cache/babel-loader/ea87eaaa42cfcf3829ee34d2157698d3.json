{"ast":null,"code":"import { testioActions } from \"./testio-slice\";\nexport function getServerList(token) {\n  if (localStorage.getItem(\"servers\") === null) {\n    setTimeout(() => {\n      return async dispatch => {\n        dispatch(testioActions.setLoading());\n        const response = await fetch(\"https://playground.oxylabs.io/api/servers\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": token\n          }\n        });\n        const data = await response.json();\n        localStorage.setItem(\"servers\", JSON.stringify(data));\n        dispatch(testioActions.showServerList(data));\n      };\n    }, 5000);\n  } else {\n    return dispatch => {\n      dispatch(testioActions.setLoading());\n      dispatch(testioActions.showServerList(JSON.parse(localStorage.getItem(\"servers\"))));\n    };\n  }\n}","map":{"version":3,"names":["testioActions","getServerList","token","localStorage","getItem","setTimeout","dispatch","setLoading","response","fetch","method","headers","data","json","setItem","JSON","stringify","showServerList","parse"],"sources":["/Users/vidmantasburba/Documents/GitHub/testio/src/store/serversList-actions.js"],"sourcesContent":["import { testioActions } from \"./testio-slice\";\n\nexport function getServerList(token) {\n  if (localStorage.getItem(\"servers\") === null) {\n    setTimeout(() => {\n      return async (dispatch) => {\n        dispatch(testioActions.setLoading());\n        const response = await fetch(\n          \"https://playground.oxylabs.io/api/servers\",\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-access-token\": token,\n            },\n          }\n        );\n        const data = await response.json();\n        localStorage.setItem(\"servers\", JSON.stringify(data));\n        dispatch(testioActions.showServerList(data));\n      };\n    }, 5000);\n  } else {\n    return (dispatch) => {\n      dispatch(testioActions.setLoading());\n      dispatch(\n        testioActions.showServerList(\n          JSON.parse(localStorage.getItem(\"servers\"))\n        )\n      );\n    };\n  }\n}\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,gBAA9B;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EACnC,IAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,MAAoC,IAAxC,EAA8C;IAC5CC,UAAU,CAAC,MAAM;MACf,OAAO,MAAOC,QAAP,IAAoB;QACzBA,QAAQ,CAACN,aAAa,CAACO,UAAd,EAAD,CAAR;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,2CAD0B,EAE1B;UACEC,MAAM,EAAE,KADV;UAEEC,OAAO,EAAE;YACP,gBAAgB,kBADT;YAEP,kBAAkBT;UAFX;QAFX,CAF0B,CAA5B;QAUA,MAAMU,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;QACAV,YAAY,CAACW,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAhC;QACAN,QAAQ,CAACN,aAAa,CAACiB,cAAd,CAA6BL,IAA7B,CAAD,CAAR;MACD,CAfD;IAgBD,CAjBS,EAiBP,IAjBO,CAAV;EAkBD,CAnBD,MAmBO;IACL,OAAQN,QAAD,IAAc;MACnBA,QAAQ,CAACN,aAAa,CAACO,UAAd,EAAD,CAAR;MACAD,QAAQ,CACNN,aAAa,CAACiB,cAAd,CACEF,IAAI,CAACG,KAAL,CAAWf,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CADF,CADM,CAAR;IAKD,CAPD;EAQD;AACF"},"metadata":{},"sourceType":"module"}