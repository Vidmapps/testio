{"ast":null,"code":"var _jsxFileName = \"/Users/vidmantasburba/Documents/GitHub/testio/src/components/ServersList/ServersList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { getServersList } from \"../../store/serversList-actions\";\nimport Server from \"./Server\";\nimport styles from \"./ServersList.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initialLoad = true;\n\nconst ServersList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const sortOption = queryParams.get(\"sort\");\n  const testio = useSelector(state => state.testio);\n  const {\n    serversList,\n    token\n  } = testio;\n  const [servers, setServers] = useState([]);\n  const sortHandler = useCallback(option => {\n    const validOption = option ? option : \"name\";\n    history.push(`/home?sort=${validOption}`);\n    const arrayForSort = [...serversList];\n    const sorted = arrayForSort.sort((a, b) => {\n      return a[validOption] < b[validOption] ? -1 : 1;\n    });\n    setServers(sorted);\n  }, [history, serversList]);\n  useEffect(() => {\n    if (initialLoad) {\n      dispatch(getServersList(token));\n      initialLoad = false;\n    }\n\n    sortHandler(sortOption);\n  }, [dispatch, sortHandler, sortOption, token]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"pointer\",\n      name: \"sort\",\n      id: \"sort\",\n      onChange: event => sortHandler(event.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"name\",\n        children: \"Sort by name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"distance\",\n        children: \"Sort by distance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"widthFillAvailable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: styles.tableHeader,\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Distance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: servers.map(server => {\n          return /*#__PURE__*/_jsxDEV(Server, {\n            name: server.name,\n            distance: server.distance\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ServersList, \"LQyoQ//xOa0BD5ZF7Z0KW6H5YvM=\", false, function () {\n  return [useDispatch, useHistory, useLocation, useSelector];\n});\n\n_c = ServersList;\nexport default ServersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServersList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Fragment","useSelector","useDispatch","useHistory","useLocation","getServersList","Server","styles","initialLoad","ServersList","dispatch","history","location","queryParams","URLSearchParams","search","sortOption","get","testio","state","serversList","token","servers","setServers","sortHandler","option","validOption","push","arrayForSort","sorted","sort","a","b","event","target","value","tableHeader","map","server","name","distance","Math","random"],"sources":["/Users/vidmantasburba/Documents/GitHub/testio/src/components/ServersList/ServersList.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { getServersList } from \"../../store/serversList-actions\";\n\nimport Server from \"./Server\";\nimport styles from \"./ServersList.module.scss\";\n\nlet initialLoad = true;\n\nconst ServersList = () => {\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const sortOption = queryParams.get(\"sort\");\n\n  const testio = useSelector((state) => state.testio);\n  const { serversList, token } = testio;\n\n  const [servers, setServers] = useState([]);\n\n  const sortHandler = useCallback(\n    (option) => {\n      const validOption = option ? option : \"name\";\n      history.push(`/home?sort=${validOption}`);\n      const arrayForSort = [...serversList];\n\n      const sorted = arrayForSort.sort((a, b) => {\n        return a[validOption] < b[validOption] ? -1 : 1;\n      });\n\n      setServers(sorted);\n    },\n    [history, serversList]\n  );\n\n  useEffect(() => {\n    if (initialLoad) {\n      dispatch(getServersList(token));\n      initialLoad = false;\n    }\n    sortHandler(sortOption);\n  }, [dispatch, sortHandler, sortOption, token]);\n\n  return (\n    <Fragment>\n      <select\n        className=\"pointer\"\n        name=\"sort\"\n        id=\"sort\"\n        onChange={(event) => sortHandler(event.target.value)}\n      >\n        <option value=\"name\">Sort by name</option>\n        <option value=\"distance\">Sort by distance</option>\n      </select>\n\n      <table className=\"widthFillAvailable\">\n        <thead>\n          <tr className={styles.tableHeader}>\n            <th>Server</th>\n            <th>Distance</th>\n          </tr>\n        </thead>\n        <tbody>\n          {servers.map((server) => {\n            return (\n              <Server\n                key={Math.random()}\n                name={server.name}\n                distance={server.distance}\n              ></Server>\n            );\n          })}\n        </tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nexport default ServersList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}