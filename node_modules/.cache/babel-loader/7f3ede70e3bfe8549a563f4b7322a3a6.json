{"ast":null,"code":"async function getToken() {\n  const response = await fetch(\"https://playground.oxylabs.io/api/user/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username: \"oxylabs\",\n      password: \"partyanimal\"\n    })\n  });\n  const data = await response.json();\n  return data.token;\n}\n\nasync function getServerList(token) {\n  const response = await fetch(\"https://playground.oxylabs.io/api/servers\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-access-token\": token\n    }\n  });\n  const data = await response.json();\n  return data;\n}\n\nexport async function runAuth() {\n  const token = await getToken();\n  const serverLists = await getServerList(token);\n  localStorage.setItem(\"servers\", JSON.stringify(serverLists));\n}","map":{"version":3,"names":["getToken","response","fetch","method","headers","body","JSON","stringify","username","password","data","json","token","getServerList","runAuth","serverLists","localStorage","setItem"],"sources":["/Users/vidmantasburba/Documents/GitHub/testio/src/utils/getServers.js"],"sourcesContent":["async function getToken() {\n  const response = await fetch(\"https://playground.oxylabs.io/api/user/login\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      username: \"oxylabs\",\n      password: \"partyanimal\",\n    }),\n  });\n\n  const data = await response.json();\n\n  return data.token;\n}\n\nasync function getServerList(token) {\n  const response = await fetch(\"https://playground.oxylabs.io/api/servers\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-access-token\": token,\n    },\n  });\n\n  const data = await response.json();\n\n  return data;\n}\n\nexport async function runAuth() {\n  const token = await getToken();\n  const serverLists = await getServerList(token);\n  localStorage.setItem(\"servers\", JSON.stringify(serverLists));\n}\n"],"mappings":"AAAA,eAAeA,QAAf,GAA0B;EACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAAD,EAAiD;IAC3EC,MAAM,EAAE,MADmE;IAE3EC,OAAO,EAAE;MAAE,gBAAgB;IAAlB,CAFkE;IAG3EC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBC,QAAQ,EAAE,SADS;MAEnBC,QAAQ,EAAE;IAFS,CAAf;EAHqE,CAAjD,CAA5B;EASA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAAnB;EAEA,OAAOD,IAAI,CAACE,KAAZ;AACD;;AAED,eAAeC,aAAf,CAA6BD,KAA7B,EAAoC;EAClC,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAAD,EAA8C;IACxEC,MAAM,EAAE,KADgE;IAExEC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEP,kBAAkBQ;IAFX;EAF+D,CAA9C,CAA5B;EAQA,MAAMF,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAAnB;EAEA,OAAOD,IAAP;AACD;;AAED,OAAO,eAAeI,OAAf,GAAyB;EAC9B,MAAMF,KAAK,GAAG,MAAMZ,QAAQ,EAA5B;EACA,MAAMe,WAAW,GAAG,MAAMF,aAAa,CAACD,KAAD,CAAvC;EACAI,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCX,IAAI,CAACC,SAAL,CAAeQ,WAAf,CAAhC;AACD"},"metadata":{},"sourceType":"module"}