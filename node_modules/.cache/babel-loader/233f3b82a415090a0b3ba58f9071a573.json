{"ast":null,"code":"import { testioActions } from \"./testio-slice\";\nexport function getServerList(token) {\n  setTimeout(() => {\n    if (localStorage.getItem(\"servers\") === null) {\n      return async dispatch => {\n        dispatch(testioActions.setLoading());\n        const response = await fetch(\"https://playground.oxylabs.io/api/servers\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": token\n          }\n        });\n        const data = await response.json();\n        localStorage.setItem(\"servers\", JSON.stringify(data));\n        dispatch(testioActions.showServerList(data));\n      };\n    } else {\n      return dispatch => {\n        dispatch(testioActions.setLoading());\n        dispatch(testioActions.showServerList(JSON.parse(localStorage.getItem(\"servers\"))));\n      };\n    }\n  }, 5000);\n}","map":{"version":3,"names":["testioActions","getServerList","token","setTimeout","localStorage","getItem","dispatch","setLoading","response","fetch","method","headers","data","json","setItem","JSON","stringify","showServerList","parse"],"sources":["/Users/vidmantasburba/Documents/GitHub/testio/src/store/serversList-actions.js"],"sourcesContent":["import { testioActions } from \"./testio-slice\";\n\nexport function getServerList(token) {\n  setTimeout(() => {\n    if (localStorage.getItem(\"servers\") === null) {\n      return async (dispatch) => {\n        dispatch(testioActions.setLoading());\n        const response = await fetch(\n          \"https://playground.oxylabs.io/api/servers\",\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-access-token\": token,\n            },\n          }\n        );\n        const data = await response.json();\n        localStorage.setItem(\"servers\", JSON.stringify(data));\n        dispatch(testioActions.showServerList(data));\n      };\n    } else {\n      return (dispatch) => {\n        dispatch(testioActions.setLoading());\n        dispatch(\n          testioActions.showServerList(\n            JSON.parse(localStorage.getItem(\"servers\"))\n          )\n        );\n      };\n    }\n  }, 5000);\n}\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,gBAA9B;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EACnCC,UAAU,CAAC,MAAM;IACf,IAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,MAAoC,IAAxC,EAA8C;MAC5C,OAAO,MAAOC,QAAP,IAAoB;QACzBA,QAAQ,CAACN,aAAa,CAACO,UAAd,EAAD,CAAR;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,2CAD0B,EAE1B;UACEC,MAAM,EAAE,KADV;UAEEC,OAAO,EAAE;YACP,gBAAgB,kBADT;YAEP,kBAAkBT;UAFX;QAFX,CAF0B,CAA5B;QAUA,MAAMU,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;QACAT,YAAY,CAACU,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAhC;QACAN,QAAQ,CAACN,aAAa,CAACiB,cAAd,CAA6BL,IAA7B,CAAD,CAAR;MACD,CAfD;IAgBD,CAjBD,MAiBO;MACL,OAAQN,QAAD,IAAc;QACnBA,QAAQ,CAACN,aAAa,CAACO,UAAd,EAAD,CAAR;QACAD,QAAQ,CACNN,aAAa,CAACiB,cAAd,CACEF,IAAI,CAACG,KAAL,CAAWd,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CADF,CADM,CAAR;MAKD,CAPD;IAQD;EACF,CA5BS,EA4BP,IA5BO,CAAV;AA6BD"},"metadata":{},"sourceType":"module"}