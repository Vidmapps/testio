{"ast":null,"code":"var _jsxFileName = \"/Users/vidmantasburba/Desktop/FrontEnd/frontend_oxylabs/testio/src/components/GetServers.js\";\nimport React, { Component } from \"react\"; //import { Jwt } from \"jsonwebtoken\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GetServers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      servers: [],\n      isLoaded: false\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://playground.oxylabs.io/api/user/login\";\n    const TOKEN = 'eyJ1c2VybmFtZSI6Im94eWxhYnMiLCJwYXNzd29yZCI6InBhcnR5YW5pbWFsIiwiYWxnIjoiSFMyNTYifQ.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.jXcJGj1q1X3Gk1C-CoZlbF1bZwm6aTmWeuF6Axf0_CM';\n    const response = await fetch(url, {\n      method: 'post',\n      headers: new Headers({\n        'x-access-token': {\n          TOKEN\n        },\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }),\n      body: ''\n    });\n    const data = await response.json();\n    console.log(data);\n    /* if (JSON.parse(localStorage.getItem(\"servers\")) !== null) {\n        console.log(JSON.parse(localStorage.getItem(\"servers\")))\n      this.setState({\n        isLoaded: true,\n        films: JSON.parse(localStorage.getItem(\"servers\")),\n      });\n    } else {\n        const url = \"https://playground.oxylabs.io/api/servers\";\n        const TOKEN = 'eyJ1c2VybmFtZSI6Im94eWxhYnMiLCJwYXNzd29yZCI6InBhcnR5YW5pbWFsIiwiYWxnIjoiSFMyNTYifQ.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.jXcJGj1q1X3Gk1C-CoZlbF1bZwm6aTmWeuF6Axf0_CM'\n        const response = await fetch(url, { \n            method: 'post', \n            headers: new Headers({\n              'x-access-token': {TOKEN}, \n              'Content-Type': 'application/x-www-form-urlencoded'\n            }), \n            body: ''\n          }); \n        const data = await response.json();\n        console.log(data) */\n\n    /* fetch()\n        .then((response) => response.json())\n        .then((json) => {\n        localStorage.setItem(\"servers\", JSON.stringify(json.results));\n        this.setState({\n            isLoaded: true,\n            servers: JSON.parse(localStorage.getItem(\"servers\")),\n        });\n        }); */\n  }\n  /*  const response = await fetch('https://homework.fdp.workers.dev/', {\n       method: 'POST',\n       body: JSON.stringify({data}),\n       headers: {\n         'Content-Type': 'application/json',\n         'X-API-KEY': 'swb-222222',\n       },\n     });\n     console.log(response.json()); */\n\n\n  render() {\n    var {\n      isLoaded,\n      servers\n    } = this.state;\n\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 display-6\",\n        children: \"Loading data from API...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"servers\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: servers.map((server, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: server.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default GetServers;","map":{"version":3,"sources":["/Users/vidmantasburba/Desktop/FrontEnd/frontend_oxylabs/testio/src/components/GetServers.js"],"names":["React","Component","GetServers","constructor","props","state","servers","isLoaded","componentDidMount","url","TOKEN","response","fetch","method","headers","Headers","body","data","json","console","log","render","map","server","index","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AACjCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,UAAMC,GAAG,GAAG,8CAAZ;AACA,UAAMC,KAAK,GAAG,2MAAd;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AAC9BI,MAAAA,MAAM,EAAE,MADsB;AAE9BC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,0BAAkB;AAACL,UAAAA;AAAD,SADC;AAEnB,wBAAgB;AAFG,OAAZ,CAFqB;AAM9BM,MAAAA,IAAI,EAAE;AANwB,KAAN,CAA5B;AAQA,UAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK;AAGJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEEI,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEd,MAAAA,QAAF;AAAYD,MAAAA;AAAZ,QAAwB,KAAKD,KAAjC;;AACA,QAAI,CAACE,QAAL,EAAe;AACb,0BAAO;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA,oBACGD,OAAO,CAACgB,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC9B,gCACE;AAAA,qCACE;AAAA,0BAAMD,MAAM,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA;AADF,eAAUD,KAAV;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WANA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAaD;AACF;;AAlFgC;;AAqFnC,eAAetB,UAAf","sourcesContent":["import React, { Component } from \"react\";\n//import { Jwt } from \"jsonwebtoken\";\n\nclass GetServers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      servers: [],\n      isLoaded: false,\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://playground.oxylabs.io/api/user/login\";\n    const TOKEN = 'eyJ1c2VybmFtZSI6Im94eWxhYnMiLCJwYXNzd29yZCI6InBhcnR5YW5pbWFsIiwiYWxnIjoiSFMyNTYifQ.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.jXcJGj1q1X3Gk1C-CoZlbF1bZwm6aTmWeuF6Axf0_CM'\n    const response = await fetch(url, { \n        method: 'post', \n        headers: new Headers({\n          'x-access-token': {TOKEN}, \n          'Content-Type': 'application/x-www-form-urlencoded'\n        }), \n        body: ''\n      }); \n    const data = await response.json();\n    console.log(data)\n    /* if (JSON.parse(localStorage.getItem(\"servers\")) !== null) {\n        console.log(JSON.parse(localStorage.getItem(\"servers\")))\n      this.setState({\n        isLoaded: true,\n        films: JSON.parse(localStorage.getItem(\"servers\")),\n      });\n    } else {\n        const url = \"https://playground.oxylabs.io/api/servers\";\n        const TOKEN = 'eyJ1c2VybmFtZSI6Im94eWxhYnMiLCJwYXNzd29yZCI6InBhcnR5YW5pbWFsIiwiYWxnIjoiSFMyNTYifQ.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.jXcJGj1q1X3Gk1C-CoZlbF1bZwm6aTmWeuF6Axf0_CM'\n        const response = await fetch(url, { \n            method: 'post', \n            headers: new Headers({\n              'x-access-token': {TOKEN}, \n              'Content-Type': 'application/x-www-form-urlencoded'\n            }), \n            body: ''\n          }); \n        const data = await response.json();\n        console.log(data) */\n        /* fetch()\n            .then((response) => response.json())\n            .then((json) => {\n            localStorage.setItem(\"servers\", JSON.stringify(json.results));\n            this.setState({\n                isLoaded: true,\n                servers: JSON.parse(localStorage.getItem(\"servers\")),\n            });\n            }); */\n    }\n  \n\n /*  const response = await fetch('https://homework.fdp.workers.dev/', {\n      method: 'POST',\n      body: JSON.stringify({data}),\n      headers: {\n        'Content-Type': 'application/json',\n        'X-API-KEY': 'swb-222222',\n      },\n    });\n    console.log(response.json()); */\n\n  render() {\n    var { isLoaded, servers } = this.state;\n    if (!isLoaded) {\n      return <div className=\"p-4 display-6\">Loading data from API...</div>;\n    } else {\n      return (\n        <div className=\"servers\">\n          <div className=\"\">\n            {servers.map((server, index) => {\n              return (\n                <div key={index}>\n                  <div>{server.title}</div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default GetServers;\n"]},"metadata":{},"sourceType":"module"}