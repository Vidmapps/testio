{"ast":null,"code":"var _jsxFileName = \"/Users/vidmantasburba/Desktop/FrontEnd/frontend_oxylabs/testio/src/components/ServerList.js\",\n    _s = $RefreshSig$();\n\nimport Server from \"./Server\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ServerList() {\n  _s();\n\n  const [serverList, setServerList] = useState([]);\n\n  const sortByName = () => {\n    const sorted = JSON.parse(localStorage.getItem(\"servers\")).sort(function (a, b) {\n      if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n      if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n      return 0;\n    });\n    console.log(sorted);\n    setServerList(sorted);\n  };\n\n  const sortByDistance = () => {\n    const sorted = JSON.parse(localStorage.getItem(\"servers\")).sort(function (a, b) {\n      if (a.distance < b.distance) return -1;\n      if (a.distance > b.distance) return 1;\n      return 0;\n    });\n    console.log(sorted);\n    setServerList(sorted);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ServerList\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sortByName,\n      children: \"Sort by Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sortByDistance,\n      children: \"Sort by Distance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"text-uppercase table-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col text-end\",\n            children: \"Distance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: serverList.map(server => {\n          return /*#__PURE__*/_jsxDEV(Server, {\n            name: server.name,\n            distance: server.distance\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ServerList, \"wgDv7MKqDHHELGmzWE2LMfqvtCs=\");\n\n_c = ServerList;\nexport default ServerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServerList\");","map":{"version":3,"sources":["/Users/vidmantasburba/Desktop/FrontEnd/frontend_oxylabs/testio/src/components/ServerList.js"],"names":["Server","React","useState","ServerList","serverList","setServerList","sortByName","sorted","JSON","parse","localStorage","getItem","sort","a","b","name","toLowerCase","console","log","sortByDistance","distance","map","server","Math","random"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMI,UAAU,GAAG,MAAM;AACvB,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CC,IAA5C,CAAiD,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC9E,UAAID,CAAC,CAACE,IAAF,CAAOC,WAAP,KAAuBF,CAAC,CAACC,IAAF,CAAOC,WAAP,EAA3B,EAAiD,OAAO,CAAC,CAAR;AACjD,UAAIH,CAAC,CAACE,IAAF,CAAOC,WAAP,KAAuBF,CAAC,CAACC,IAAF,CAAOC,WAAP,EAA3B,EAAiD,OAAO,CAAP;AACjD,aAAO,CAAP;AACD,KAJc,CAAf;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACAF,IAAAA,aAAa,CAACE,MAAD,CAAb;AACD,GARD;;AAUA,QAAMY,cAAc,GAAG,MAAM;AAC3B,UAAMZ,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CC,IAA5C,CAAiD,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC9E,UAAID,CAAC,CAACO,QAAF,GAAaN,CAAC,CAACM,QAAnB,EAA6B,OAAO,CAAC,CAAR;AAC7B,UAAIP,CAAC,CAACO,QAAF,GAAaN,CAAC,CAACM,QAAnB,EAA6B,OAAO,CAAP;AAC7B,aAAO,CAAP;AACD,KAJc,CAAf;AAKAH,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACAF,IAAAA,aAAa,CAACE,MAAD,CAAb;AACD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAED,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEa,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAO,MAAA,SAAS,EAAC,mBAAjB;AAAA,8BACE;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,6BAAd;AAAA,kCACE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,KAAK,EAAC,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,kBACGf,UAAU,CAACiB,GAAX,CAAgBC,MAAD,IAAY;AAC1B,8BACE,QAAC,MAAD;AAEE,YAAA,IAAI,EAAEA,MAAM,CAACP,IAFf;AAGE,YAAA,QAAQ,EAAEO,MAAM,CAACF;AAHnB,aACOG,IAAI,CAACC,MAAL,EADP;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD,SARA;AADH;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAlDQrB,U;;KAAAA,U;AAoDT,eAAeA,UAAf","sourcesContent":["import Server from \"./Server\";\nimport React, { useState } from \"react\";\n\nfunction ServerList() {\n  const [serverList, setServerList] = useState([]);\n\n  const sortByName = () => {\n    const sorted = JSON.parse(localStorage.getItem(\"servers\")).sort(function (a, b) {\n      if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n      if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n      return 0;\n    });\n    console.log(sorted);\n    setServerList(sorted)\n  }\n\n  const sortByDistance = () => {\n    const sorted = JSON.parse(localStorage.getItem(\"servers\")).sort(function (a, b) {\n      if (a.distance < b.distance) return -1;\n      if (a.distance > b.distance) return 1;\n      return 0;\n    });\n    console.log(sorted);\n    setServerList(sorted)\n  }\n\n  return (\n    <div className=\"ServerList\">\n      <button onClick={sortByName}>Sort by Name</button>\n      <button onClick={sortByDistance}>\n        Sort by Distance\n      </button>\n      <table className=\"table table-hover\">\n        <thead>\n          <tr className=\"text-uppercase table-header\">\n            <th scope=\"col\">Server</th>\n            <th scope=\"col text-end\">Distance</th>\n          </tr>\n        </thead>\n        <tbody>\n          {serverList.map((server) => {\n            return (\n              <Server\n                key={Math.random()}\n                name={server.name}\n                distance={server.distance}\n              ></Server>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default ServerList;\n"]},"metadata":{},"sourceType":"module"}