{"ast":null,"code":"var _jsxFileName = \"/Users/vidmantasburba/Desktop/FrontEnd/frontend_oxylabs/testio/src/components/ServerList/ServerList.js\",\n    _s = $RefreshSig$();\n\nimport Server from \"./Server\";\nimport React, { useState } from \"react\";\nimport getServers from \"../../utils/getServers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ServerList() {\n  _s();\n\n  const [serverList, setServerList] = useState([]);\n  const [isLoading, setIsLoading] = useState();\n  getServers();\n\n  if (localStorage.getItem(\"servers\") === \"\") {\n    setIsLoading(true);\n    console.log(\"hello\");\n  } else {\n    setIsLoading(false);\n  }\n\n  const sortByName = () => {\n    const sorted = JSON.parse(localStorage.getItem(\"servers\")).sort(function (a, b) {\n      if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n      if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n      return 0;\n    });\n    setServerList(sorted);\n  };\n\n  const sortByDistance = () => {\n    const sorted = JSON.parse(localStorage.getItem(\"servers\")).sort(function (a, b) {\n      if (a.distance < b.distance) return -1;\n      if (a.distance > b.distance) return 1;\n      return 0;\n    });\n    setServerList(sorted);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sortByName,\n      children: \"Show sorted by Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sortByDistance,\n      children: \"Show sorted by Distance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Laoding...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"width-fill-available\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"table-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"text-align-start\",\n            children: \"Server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"text-align-end\",\n            children: \"Distance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: serverList.map(server => {\n          return /*#__PURE__*/_jsxDEV(Server, {\n            name: server.name,\n            distance: server.distance\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ServerList, \"mqUtug9AVNeOHelGzkl+gg3z394=\");\n\n_c = ServerList;\nexport default ServerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServerList\");","map":{"version":3,"sources":["/Users/vidmantasburba/Desktop/FrontEnd/frontend_oxylabs/testio/src/components/ServerList/ServerList.js"],"names":["Server","React","useState","getServers","ServerList","serverList","setServerList","isLoading","setIsLoading","localStorage","getItem","console","log","sortByName","sorted","JSON","parse","sort","a","b","name","toLowerCase","sortByDistance","distance","map","server","Math","random"],"mappings":"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","sourcesContent":["import Server from \"./Server\";\nimport React, { useState } from \"react\";\nimport getServers from \"../../utils/getServers\";\n\nfunction ServerList() {\n  const [serverList, setServerList] = useState([]);\n  const [isLoading, setIsLoading] = useState();\n  getServers();\n  if (localStorage.getItem(\"servers\") === \"\") {\n    setIsLoading(true);\n    console.log(\"hello\");\n  } else {\n    setIsLoading(false);\n  }\n  const sortByName = () => {\n    const sorted = JSON.parse(localStorage.getItem(\"servers\")).sort(function (\n      a,\n      b\n    ) {\n      if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n      if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n      return 0;\n    });\n    setServerList(sorted);\n  };\n\n  const sortByDistance = () => {\n    const sorted = JSON.parse(localStorage.getItem(\"servers\")).sort(function (\n      a,\n      b\n    ) {\n      if (a.distance < b.distance) return -1;\n      if (a.distance > b.distance) return 1;\n      return 0;\n    });\n    setServerList(sorted);\n  };\n\n  return (\n    <div>\n      <button onClick={sortByName}>Show sorted by Name</button>\n      <button onClick={sortByDistance}>Show sorted by Distance</button>\n      {isLoading ? (\n        <div>Laoding...</div>\n      ) : (\n        <table className=\"width-fill-available\">\n          <thead>\n            <tr className=\"table-header\">\n              <th scope=\"text-align-start\">Server</th>\n              <th scope=\"text-align-end\">Distance</th>\n            </tr>\n          </thead>\n          <tbody>\n            {serverList.map((server) => {\n              return (\n                <Server\n                  key={Math.random()}\n                  name={server.name}\n                  distance={server.distance}\n                ></Server>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default ServerList;\n"]},"metadata":{},"sourceType":"module"}