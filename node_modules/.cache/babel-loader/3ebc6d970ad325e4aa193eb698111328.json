{"ast":null,"code":"import { testioActions } from \"./testio-slice\";\nexport function getServerList(token) {\n  if (localStorage.getItem(\"servers\") === null) {\n    return async dispatch => {\n      const response = await fetch(\"https://playground.oxylabs.io/api/servers\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token\n        }\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem(\"servers\", JSON.stringify(data));\n        dispatch(testioActions.showServerList(data));\n      } else {\n        alert(\"Server error: please contact support\");\n      }\n    };\n  } else {\n    return dispatch => {\n      dispatch(testioActions.showServerList(JSON.parse(localStorage.getItem(\"servers\"))));\n    };\n  }\n}","map":{"version":3,"names":["testioActions","getServerList","token","localStorage","getItem","dispatch","response","fetch","method","headers","ok","data","json","setItem","JSON","stringify","showServerList","alert","parse"],"sources":["/Users/vidmantasburba/Documents/GitHub/testio/src/store/serversList-actions.js"],"sourcesContent":["import { testioActions } from \"./testio-slice\";\n\nexport function getServerList(token) {\n  if (localStorage.getItem(\"servers\") === null) {\n    return async (dispatch) => {\n      const response = await fetch(\n        \"https://playground.oxylabs.io/api/servers\",\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": token,\n          },\n        }\n      );\n      if (response.ok) {\n        const data = await response.json();\n\n        localStorage.setItem(\"servers\", JSON.stringify(data));\n\n        dispatch(testioActions.showServerList(data));\n      } else {\n        alert(\"Server error: please contact support\");\n      }\n    };\n  } else {\n    return (dispatch) => {\n      dispatch(\n        testioActions.showServerList(\n          JSON.parse(localStorage.getItem(\"servers\"))\n        )\n      );\n    };\n  }\n}\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,gBAA9B;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EACnC,IAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,MAAoC,IAAxC,EAA8C;IAC5C,OAAO,MAAOC,QAAP,IAAoB;MACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,2CAD0B,EAE1B;QACEC,MAAM,EAAE,KADV;QAEEC,OAAO,EAAE;UACP,gBAAgB,kBADT;UAEP,kBAAkBP;QAFX;MAFX,CAF0B,CAA5B;;MAUA,IAAII,QAAQ,CAACI,EAAb,EAAiB;QACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;QAEAT,YAAY,CAACU,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAhC;QAEAN,QAAQ,CAACL,aAAa,CAACgB,cAAd,CAA6BL,IAA7B,CAAD,CAAR;MACD,CAND,MAMO;QACLM,KAAK,CAAC,sCAAD,CAAL;MACD;IACF,CApBD;EAqBD,CAtBD,MAsBO;IACL,OAAQZ,QAAD,IAAc;MACnBA,QAAQ,CACNL,aAAa,CAACgB,cAAd,CACEF,IAAI,CAACI,KAAL,CAAWf,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CADF,CADM,CAAR;IAKD,CAND;EAOD;AACF"},"metadata":{},"sourceType":"module"}